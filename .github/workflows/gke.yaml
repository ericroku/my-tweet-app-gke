name: Deploy my-tweet-app-lacework to GKE
on:
  push:
    branches:
    - main
env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: lw-se-int-esix-gke-demo  
  GKE_ZONE: us-central1-c
  DEPLOYMENT_NAME: my-tweet-app
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  REGION: us-centra1-c
  ARTIFACT_REGISTRY: lw-se-int-esix/esixrepo/
jobs:
  build:
    runs-on: ubuntu-latest
    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
    # Setup gcloud CLI
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
    - name: Checkout
      uses: actions/checkout@v3
    - name: Get short SHA
      run: echo "GHA_SHA=${GITHUB_SHA:0:7}" >> $GITHUB_ENV
    - name: Build and push Docker image
      run: |
         gcloud auth configure-docker "${env.REGION}-docker.pkg.dev"
         docker pull "${env.REGION}-docker.pkg.dev/${env.PROJECT_ID}/${env.ARTIFACT_REGISTRY}/my-tweet-app-lacework:latest"
         docker build -t "${env.REGION}-docker.pkg.dev/${env.PROJECT_ID}/${env.ARTIFACT_REGISTRY}/my-tweet-app-lacework" .
         docker push "${env.REGION}-docker.pkg.dev/${env.PROJECT_ID}/${env.ARTIFACT_REGISTRY}/my-tweet-app-lacework:${{ env.GHA_SHA }}"
    - name: Scan container images for vulnerabitilies using Lacework
      uses: lacework/lw-scanner-action@v1.2.0 
      with:
        LW_ACCOUNT_NAME: ${{ secrets.LW_ACCOUNT_NAME }} 
        LW_ACCESS_TOKEN: ${{ secrets.LW_ACCESS_TOKEN }}
        IMAGE_NAME: ${env.REGION}-docker.pkg.dev/${env.PROJECT_ID}/${env.ARTIFACT_REGISTRY}/my-tweet-app-lacework
        IMAGE_TAG: ${{ env.GHA_SHA }}
        SAVE_RESULTS_IN_LACEWORK: true
        SAVE_BUILD_REPORT: true
        BUILD_REPORT_FILE_NAME: lwreport.html
        SCAN_LIBRARY_PACKAGES: true
   - name: push
    # GKE - Alternative option - authentication via credentials json
    - id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GKE_SA_KEY }}'
    - id: 'get-credentials'
      uses: 'google-github-actions/get-gke-credentials@v1'
      with:
        cluster_name: 'lw-se-int-esix-gke-demo'
        location: 'us-central1'

    
    # Get the GKE credentials so we can deploy to the cluster
    - run: |-
       gcloud container clusters get-credentials "lw-se-int-esix-gke-demo" --zone "us-central1"
       gcloud components install gke-gcloud-auth-plugin
    #setup kustomize
    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize
    # Deploy sample image to the GKE cluster
    - name: Deploy
      run: |-
        ./kustomize edit set image ericsixlacework/my-tweet-app-lacework:${{ env.GHA_SHA }}
        ./kustomize build . | kubectl apply -k .
        kubectl rollout status deployment/$DEPLOYMENT_NAME --namespace=$DEPLOYMENT_NAME
        kubectl get services -o wide


