name: Deploy my-tweet-app-lacework to GKE with Vuln Scan
on:
  push:
    branches:
    - main
env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: lw-se-int-esix-gke-demo  
  GKE_ZONE: us-central1-c
  DEPLOYMENT_NAME: my-tweet-app
  REGION: us-central1
  ARTIFACT_REGISTRY: lw-se-int-esix/esixrepo



jobs:
  container_build:
      name: Image Build
    
      runs-on: ubuntu-latest
      # Add "id-token" with the intended permissions.
      permissions:
        contents: 'read'
        id-token: 'write'
      steps:
      - name: Use Checkout
        uses: 'actions/checkout@v3'
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
         credentials_json: '${{ secrets.GCP_SA_GITHUB }}'
    # Setup gcloud CLI
    
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
    
      - name: Get short SHA
        run: |
           echo "GHA_SHA=${GITHUB_SHA:0:7}" >> $GITHUB_ENV
           echo $GHA_SHA

      - name: Call printenv to see all envs
        shell: bash
        run: printenv
    
      - name: Build and push Container Image to GAR
        run: |
           gcloud auth configure-docker "us-central1-docker.pkg.dev"
           docker pull "us-central1-docker.pkg.dev/lw-se-int-esix/esixrepo/my-tweet-app-lacework"
           docker build --tag "us-central1-docker.pkg.dev/lw-se-int-esix/esixrepo/my-tweet-app-lacework:$GITHUB_SHA" --tag "us-central1-docker.pkg.dev/lw-se-int-esix/esixrepo/my-tweet-app-lacework:latest" --build-arg GITHUB_SHA="$GITHUB_SHA" --build-arg GITHUB_REF="$GITHUB_REF" .
           docker push --all-tags "us-central1-docker.pkg.dev/lw-se-int-esix/esixrepo/my-tweet-app-lacework"
           echo "BUILD : HASH BUILD---   $GHA_SHA $GITHUB_SHA"   
      - name: Lacework Vulnscan  
        uses: lacework/lw-scanner-action@v1.3.0 
        with:
            LW_ACCOUNT_NAME: ${{ secrets.LW_ACCOUNT_NAME }} 
            LW_ACCESS_TOKEN: ${{ secrets.LW_ACCESS_TOKEN }}
            IMAGE_NAME: us-central1-docker.pkg.dev/lw-se-int-esix/esixrepo/my-tweet-app-lacework
            IMAGE_TAG: ${{ env.GITHUB_SHA }}
            SAVE_RESULTS_IN_LACEWORK: true
            SAVE_BUILD_REPORT: true
            BUILD_REPORT_FILE_NAME: lwreport.html
            SCAN_LIBRARY_PACKAGES: true
            DEBUGGING: false

  gke_deploy:
      name: GKE Deployment
      needs: container_build   
    
      runs-on: ubuntu-latest
      # Add "id-token" with the intended permissions.
      permissions:
        contents: 'read'
        id-token: 'write'
      steps:
      - name: Use Checkout
        uses: 'actions/checkout@v3'
      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GKE_SA_KEY }}'
    
      - id: 'get-credentials'
        uses: 'google-github-actions/get-gke-credentials@v1'
        with:
          cluster_name: 'lw-se-int-esix-gke-demo'
          location: 'us-central1'

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: '>= 363.0.0'

  
    # Get the GKE credentials so we can deploy to the cluster
      - run: |-
          gcloud components install gke-gcloud-auth-plugin
          gcloud container clusters get-credentials "lw-se-int-esix-gke-demo" --zone "us-central1"
    #setup kustomize
      - name: Set up Kustomize
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize
    # Deploy sample image to the GKE cluster
      - name: Deploy
        run: |-
          echo $DEPLOYMENT_NAME $GHA_SHA
          ./kustomize edit set image us-central1-docker.pkg.dev/lw-se-int-esix/esixrepo/my-tweet-app-lacework:$GITHUB_SHA
          ./kustomize build . | kubectl apply -k .
          kubectl rollout status deployment/$DEPLOYMENT_NAME --namespace=$DEPLOYMENT_NAME
          kubectl get services -A -o wide | grep -i my-tweet-app

