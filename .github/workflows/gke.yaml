name: Deploy my-tweet-app-lacework to GKE
on:
  push:
    branches:
    - main
env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: e6-gke-cluster001    
  GKE_ZONE: us-central1-c    
  DEPLOYMENT_NAME: my-tweet-app
jobs:
  build:
    runs-on: ubuntu-latest
    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Get short SHA
      run: echo "GHA_SHA=${GITHUB_SHA:0:7}" >> $GITHUB_ENV
    - name: Build
      uses: docker/build-push-action@v2
      with:
        tags: securethecloud/my-tweet-app-lacework:${{ env.GHA_SHA }},securethecloud/my-tweet-app-lacework:latest
        load: true
    - name: Scan container images for vulnerabitilies using Lacework
      uses: lacework/lw-scanner-action@v0.6.0
      with:
        LW_ACCOUNT_NAME: ${{ secrets.LW_ACCOUNT_NAME }} 
        LW_ACCESS_TOKEN: ${{ secrets.LW_ACCESS_TOKEN }}
        IMAGE_NAME: securethecloud/my-tweet-app-lacework
        IMAGE_TAG: ${{ env.GHA_SHA }}
        SAVE_RESULTS_IN_LACEWORK: true
        SAVE_BUILD_REPORT: true
        BUILD_REPORT_FILE_NAME: myreport.html
        FAIL_BUILD: false
        SEVERITY_THRESHOLD: fixable
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: tag and push
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ericsixlacework/my-tweet-app-lacework:${{ env.GHA_SHA }},ericsixlacework/my-tweet-app-lacework:prod-gke
    # GKE - Alternative option - authentication via credentials json
    - id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GKE_SA_KEY }}'
    # Setup gcloud CLI
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0
    # Get the GKE credentials so we can deploy to the cluster
    - run: |-
       gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"
    #setup kustomize
    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize
    # Deploy sample image to the GKE cluster
    - name: Deploy
      run: |-
        ./kustomize edit set image my-tweet-app=ericsixlacework/my-tweet-app-lacework:${{ env.GHA_SHA }}
        ./kustomize build 
        kubectl apply -f deployment.yaml
        kubectl rollout status deployment/$DEPLOYMENT_NAME --namespace=$DEPLOYMENT_NAME
        kubectl get services -o wide


